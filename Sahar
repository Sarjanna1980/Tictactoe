import math
import array

print("         Tic Tac Toe")  #הצגת משחק ולוח
print("           column")
print("         0    1    2")
print(" row 0 [' ', ' ', ' ']")
print(" row 1 [' ', ' ', ' ']")
print(" row 2 [' ', ' ', ' ']")

# מטריצה 3 על 3
VAL1 = "X"
VAL2 = "O"
first_player = input('Name of first player: ')
second_player = input('Name of second player: ')

def init_mat():  # פונקציה ציור של הלוח
    matrix = [
        [' ', ' ', ' '],
        [' ', ' ', ' '],
        [' ', ' ', ' ']
    ]
    return matrix

def Win():  # הכרזת ניצחון ואיתחול
    print(f'{first_player} Win')
    reset_game()

def check_for_tie(matrix):  # בדיקת תיקו ואיתחול
    for row in matrix:
        for cell in row:
            if cell == " ":
                # if there is at least one empty cell, the game is not a tie
                return False
    # if all cells are filled and there is no winner, the game is a tie
    print("Tie")
    reset_game()
    game(matrix)

def reset_game():  # איתחול משחק
    reset = input('Do you want to restart the game?: (Y/N)')
    if reset == 'Y' or reset == 'y':
        for i in range(3):
            for j in range(3):
                matrix[i][j] = " "
    elif reset == 'N' or reset == 'n':
        print('Game over')
        exit()
    else:
        print('choose is not correct exiting from the game')

def game(matrix):  # פונקציה מדפיסה לוח אם שינוי
    for row in matrix:
        print(row)

def play(player_name, val):  # פונקציה של מהלך המשחק ובדיקת ערך שהוכנס תקין
    row = int(input(f'{player_name} choose row from 0 to 2: '))
    column = int(input(f'{player_name} choose column from 0 to 2: '))
    if not 0 <= row <= 2 or not 0 <= column <= 2:
        print('Invalid value of row or column Please enter values between 0 and 2')
        game(matrix)
        play(player_name, val)

    elif matrix[row][column] != " ":
        print("Position already taken, try again")
        game(matrix)
        play(player_name, val)

    else:
        matrix[row][column] = val

def check_win(matrix, val):  # פונקציה בדיקת נצחון
    # הורזנטלי
    for row in matrix:
        if row[0] == row[1] == row[2] and row[0] == val:
            return True

    # ורטקלי
    for column in range(3):
        if matrix[0][column] == matrix[1][column] == matrix[2][column] and matrix[0][column] == val:
            return True

    # שני אלכסונים
    if matrix[0][0] == matrix[1][1] == matrix[2][2] and matrix[0][0] == val:
        return True

    if matrix[0][2] == matrix[1][1] == matrix[2][0] and matrix[0][2] == val:
        return True

    return False


matrix = init_mat()  # גוף הקוד
while True:
    game(matrix)
    play(first_player, VAL1)
    game(matrix)
    if check_win(matrix, VAL1):
        Win()
    check_for_tie(matrix)
    play(second_player, VAL2)
    if check_win(matrix, VAL1):
        Win()
    check_for_tie(matrix)
